__author__ = 'yihanjiang'
import matplotlib.pylab as plt


def len1000_bench():

    SNRS        = [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]
    rnn_ber_1000 = [0.038248999999999998, 0.00365, 0.000116, 2.49e-05, 8.74e-06, 3.48e-06,1.46e-06, 3.4e-7]
    rnn_bler_1000= [0.88400000000000001, 0.30299999999999999, 0.037999999999999999, 0.0089999999999999993, 0.0050000000000000001, 0.00168,
                    0.00074, 0.00039999999999995595]

    commpy_ber_1000 = [0.038989200000000002, 0.0055069999999999997, 0.000281, 2.8799999999999999e-05, 9.3999999999999998e-06, 4.1999999999999996e-06, 7.9999999999999996e-07, 7.9999999999999996e-07]
    commpy_bler_1000 = [0.94420000000000004, 0.4526, 0.068400000000000016, 0.010800000000000032, 0.0040000000000000036, 0.0020000000000000018, 0.00039999999999995595, 0.00039999999999995595]

    commpy_ber_1000=[0.028667999999999999, 0.0021169000000000001, 9.6700000000000006e-05, 2.0100000000000001e-05, 7.0999999999999998e-06, 2.3999999999999999e-06, 7.9999999999999996e-07, 5.9999999999999997e-07]
    commpy_bler_1000 = [0.76219999999999999, 0.17859999999999998, 0.024900000000000033, 0.0080000000000000071, 0.0034999999999999476, 0.0011999999999999789, 0.00039999999999995595, 0.00029999999999996696]


    plt.figure(1)
    plt.title('BER')
    plt.title('Block len = 1000 BER on AWGN')
    plt.yscale('log')
    p10,  = plt.plot(SNRS, commpy_ber_1000, 'b', label = 'AWGN Commpy Decoding')
    p11,  = plt.plot(SNRS, rnn_ber_1000,    'g', label = 'RNN Decoding')

    # p20,  = plt.plot(SNRS, commpy_ber_fixvar_2,   'r--', label = 'Commpy Decoder feed wrong SNR 2dB')
    # # p21,  = plt.plot(SNRS, commpy_ber_fixvar_1,  'c--', label = 'Commpy Decoder feed wrong SNR 1dB')
    # p22,  = plt.plot(SNRS, commpy_ber_fixvar_0,'c--', label = 'Commpy Decoder feed wrong SNR 0dB')
    # # p23,  = plt.plot(SNRS, commpy_ber_fixvar_neg1,   'b--', label = 'Commpy Decoder feed wrong SNR -1dB')
    # p24,  = plt.plot(SNRS, commpy_ber_fixvar_neg1_5,   'y--', label = 'Commpy Decoder feed wrong SNR -1.5dB')


    plt.legend(handles = [p10, p11])

    plt.figure(2)
    plt.title('BLER len = 1000 BER on AWGN')
    plt.yscale('log')
    p10,  = plt.plot(SNRS, commpy_bler_1000, 'b', label = 'AWGN Commpy Decoding')
    p11,  = plt.plot(SNRS, rnn_bler_1000,    'g', label = 'RNN Decoding')

    # p20,  = plt.plot(SNRS, commpy_bler_fixvar_2,   'r--', label = 'Commpy Decoder feed wrong SNR 2dB')
    # # p21,  = plt.plot(SNRS, commpy_bler_fixvar_1,  'c--', label = 'Commpy Decoder feed wrong SNR 1dB')
    # p22,  = plt.plot(SNRS, commpy_bler_fixvar_0,'c--', label = 'Commpy Decoder feed wrong SNR 0dB')
    # # p23,  = plt.plot(SNRS, commpy_bler_fixvar_neg1,   'b--', label = 'Commpy Decoder feed wrong SNR -1dB')
    # p24,  = plt.plot(SNRS, commpy_bler_fixvar_neg1_5,   'y--', label = 'Commpy Decoder feed wrong SNR -1.5dB')


    plt.legend(handles = [p10, p11])

    plt.show()


def len100_fixvar():
    SNRS        = [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]

    rnn_ber     = [0.064731999999999998, 0.030960999999999999, 0.011174, 0.0032659999999999998, 0.00082399999999999997, 0.00020799999999999999, 6.3999999999999997e-05, 2.8000000000000002e-05]
    #rnn_ber     = [0.065068200000000007, 0.031203000000000002, 0.0115608, 0.0033257999999999999, 0.00085680000000000001, 0.00022240000000000001, 9.1399999999999999e-05, 3.1999999999999999e-05]
    rnn_bler    = [0.58330000000000004, 0.35170000000000001, 0.17080000000000001, 0.065600000000000006, 0.0241, 0.0083999999999999995, 0.0030999999999999999, 0.0018999999999999999]
    #rnn_bler    = [0.59018000000000004, 0.36208000000000001, 0.17218, 0.067400000000000002, 0.024559999999999998, 0.0094999999999999998, 0.0045199999999999997, 0.0016000000000000001]

    commpy_ber_bl100_iter6 =[0.05856, 0.02735, 0.00997, 0.003071, 0.000749, 0.0001968, 6.37e-05, 2.85e-05]
    commpy_bler_bl100_iter6 = [0.52479999999999993, 0.29549999999999998, 0.13429999999999997, 0.054699999999999971, 0.019499999999999962, 0.0071999999999999842, 0.0032999999999999696, 0.0018000000000000238]

    commpy_ber_fixvar_2   = [0.079824999999999993, 0.038845999999999999, 0.01383, 0.004104, 0.00086700000000000004, 0.000205, 8.0000000000000007e-05, 3.4e-05]
    commpy_bler_fixvar_2  = [0.56469999999999998, 0.33499999999999996, 0.15500000000000003, 0.061499999999999999, 0.021100000000000008, 0.0070000000000000062, 0.0033999999999999586, 0.0018000000000000238]

    commpy_ber_fixvar_1   = [0.073273000000000005, 0.034257000000000003, 0.012012, 0.0035769999999999999, 0.00076599999999999997, 0.00018000000000000001, 6.6000000000000005e-05, 3.6000000000000001e-05]
    commpy_bler_fixvar_1  = [0.54530000000000001, 0.31779999999999997, 0.14570000000000005, 0.058400000000000007, 0.020299999999999985, 0.0071999999999999842, 0.0031999999999999806, 0.0019000000000000128]

    commpy_ber_fixvar_0   = [0.064907999999999993, 0.029426999999999998, 0.010269, 0.0030709999999999999, 0.00071199999999999996, 0.000164, 6.0999999999999999e-05, 3.1999999999999999e-05]
    commpy_bler_fixvar_0  = [0.52489999999999992, 0.30100000000000005, 0.1371, 0.054699999999999971, 0.01859999999999995, 0.0067000000000000393, 0.0030999999999999917, 0.0017000000000000348]

    commpy_ber_fixvar_neg1= [0.058129, 0.026016999999999998, 0.0092510000000000005, 0.0028240000000000001, 0.00064300000000000002, 0.00014999999999999999, 6.4999999999999994e-05, 3.4e-05]
    commpy_bler_fixvar_neg1= [0.51829999999999998, 0.29549999999999998, 0.13319999999999999, 0.053499999999999992, 0.018399999999999972, 0.0067000000000000393, 0.0031999999999999806, 0.0018000000000000238]

    commpy_ber_fixvar_neg1_5 = [0.056631000000000001, 0.025609, 0.0092530000000000008, 0.0028300000000000001, 0.00068199999999999999, 0.00014799999999999999, 6.7999999999999999e-05, 3.4e-05]
    commpy_bler_fixvar_neg1_5= [0.52479999999999993, 0.30279999999999996, 0.13880000000000003, 0.055400000000000005, 0.01870000000000005, 0.0069000000000000172, 0.0031999999999999806, 0.0018000000000000238]

    plt.figure(1)
    plt.title('BER')
    plt.title('Block len = 100 BER')
    plt.yscale('log')
    p10,  = plt.plot(SNRS, commpy_ber_bl100_iter6, 'b', label = 'AWGN Commpy Decoding')
    p11,  = plt.plot(SNRS, rnn_ber,    'g', label = 'RNN Decoding')

    # p20,  = plt.plot(SNRS, commpy_ber_fixvar_2,   'r--', label = 'Commpy Decoder feed wrong SNR 2dB')
    # # p21,  = plt.plot(SNRS, commpy_ber_fixvar_1,  'c--', label = 'Commpy Decoder feed wrong SNR 1dB')
    # p22,  = plt.plot(SNRS, commpy_ber_fixvar_0,'c--', label = 'Commpy Decoder feed wrong SNR 0dB')
    # # p23,  = plt.plot(SNRS, commpy_ber_fixvar_neg1,   'b--', label = 'Commpy Decoder feed wrong SNR -1dB')
    # p24,  = plt.plot(SNRS, commpy_ber_fixvar_neg1_5,   'y--', label = 'Commpy Decoder feed wrong SNR -1.5dB')


    plt.legend(handles = [p10, p11])

    plt.figure(2)
    plt.title('BLER')
    plt.yscale('log')
    p10,  = plt.plot(SNRS, commpy_bler_bl100_iter6, 'b', label = 'AWGN Commpy Decoding')
    p11,  = plt.plot(SNRS, rnn_bler,    'g', label = 'RNN Decoding')

    # p20,  = plt.plot(SNRS, commpy_bler_fixvar_2,   'r--', label = 'Commpy Decoder feed wrong SNR 2dB')
    # # p21,  = plt.plot(SNRS, commpy_bler_fixvar_1,  'c--', label = 'Commpy Decoder feed wrong SNR 1dB')
    # p22,  = plt.plot(SNRS, commpy_bler_fixvar_0,'c--', label = 'Commpy Decoder feed wrong SNR 0dB')
    # # p23,  = plt.plot(SNRS, commpy_bler_fixvar_neg1,   'b--', label = 'Commpy Decoder feed wrong SNR -1dB')
    # p24,  = plt.plot(SNRS, commpy_bler_fixvar_neg1_5,   'y--', label = 'Commpy Decoder feed wrong SNR -1.5dB')


    plt.legend(handles = [p10, p11])

    plt.show()





def benchmark_wrong_var_turbo():
    SNRS        = [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]

    commpy_awgn  = [0.028234, 0.002122, 6.8e-05, 2.01e-05, 7.1e-06, 2.9e-06, 9e-07, 3e-07]
    rnn_awgn     = [0.038248999999999998, 0.00365, 0.000116, 2.49e-05, 8.74e-06, 3.48e-06, 1.06e-06, 3.4e-07]

    ber_varfix_5 = [0.079513, 0.010133, 0.00042999999999999999, 4.3000000000000002e-05, 1.5e-05, 7.9999999999999996e-06, 3.9999999999999998e-06, 3.9999999999999998e-06]
    ber_varfix_10= [0.187444, 0.14637700000000001, 0.10546700000000001, 0.077982999999999997, 0.096264000000000002, 0.17179700000000001, 0.281273, 0.36864999999999998]
    ber_varfix_neg5 = [0.15428600000000001, 0.135658, 0.11715299999999999, 0.099349000000000007, 0.082200999999999996, 0.066356999999999999, 0.051866000000000002, 0.038913999999999997]
    ber_varfix_2 = [0.060194999999999999, 0.0059740000000000001, 0.000136,2.0599999999999999e-05, 7.0999999999999998e-06, 2.6000000000000001e-06, 7.9999999999999996e-07, 3.5e-07]

    ber_varfix_neg1 = [0.030377000000000001, 0.0022650000000000001, 8.1000000000000004e-05, 2.02e-05, 7.9999999999999996e-06, 6.0000000000000002e-06, 1.9999999999999999e-06, 1.9999999999999999e-06]
    ber_varfix_neg15 = [0.028463499999999999, 0.0021849999999999999, 8.7499999999999999e-05, 2.04e-05, 6.9999999999999999e-06, 6.0000000000000002e-06, 1.9999999999999999e-06, 1.9999999999999999e-06]
    ber_varfix_0 = [0.039355000000000001, 0.0029007, 0.000105, 2.0100000000000001e-05, 7.0999999999999998e-06, 2.6000000000000001e-06, 8.9999999999999996e-07, 5.9999999999999997e-07]

    bler_varfix_10 = [1.0, 1.0, 1.0, 0.998, 0.99199999999999999, 0.96699999999999997, 0.94399999999999995, 0.94100000000000006]
    bler_varfix_5  = [0.91400000000000003, 0.36199999999999999, 0.04500000000000004, 0.013000000000000012, 0.0060000000000000053, 0.0040000000000000036, 0.0020000000000000018, 0.0020000000000000018]
    bler_varfix_2  = [0.88, 0.28200000000000003, 0.031499999999999972, 0.0080000000000000071, 0.0040000000000000036, 0.0030000000000000027, 0.0010000000000000009, 0.0010000000000000009]
    bler_varfix_neg1 = [0.76849999999999996, 0.17849999999999999, 0.024499999999999966, 0.0074999999999999512, 0.0040000000000000036, 0.0030000000000000027, 0.0010000000000000009, 0.0010000000000000009]
    bler_varfix_neg15 = [0.76749999999999996, 0.17900000000000005, 0.025499999999999967, 0.0070000000000000062, 0.0034999999999999476, 0.0030000000000000027, 0.0010000000000000009, 0.0010000000000000009]
    bler_varfix_neg5 = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    bler_varfix_0   = [0.80010000000000003, 0.20609999999999995, 0.025299999999999989, 0.0080000000000000071, 0.0034999999999999476, 0.0012999999999999678, 0.00039999999999995595, 0.00029999999999996696]

    plt.figure(1)
    plt.title('Block len = 1000 BER Comparing Turbo with wrong variance feed')
    plt.yscale('log')
    p10,  = plt.plot(SNRS, commpy_awgn, 'b', label = 'Commpy Decoding')
    p11,  = plt.plot(SNRS, rnn_awgn,    'g', label = 'RNN Decoding')

    # p20,  = plt.plot(SNRS, ber_varfix_5,   'r--', label = 'Commpy Decoder feed wrong SNR 5dB')
    # p21,  = plt.plot(SNRS, ber_varfix_10,  'c--', label = 'Commpy Decoder feed wrong SNR 10dB')
    # p22,  = plt.plot(SNRS, ber_varfix_neg5,'g--', label = 'Commpy Decoder feed wrong SNR -5dB')
    p23,  = plt.plot(SNRS, ber_varfix_2,   'b--', label = 'Commpy Decoder feed wrong SNR 2dB')
    p24,  = plt.plot(SNRS, ber_varfix_neg15,   'y--', label = 'Commpy Decoder feed wrong SNR -1.5dB')
    p25,  = plt.plot(SNRS, ber_varfix_neg1,   'k--', label = 'Commpy Decoder feed wrong SNR -1dB')
    p26,  = plt.plot(SNRS, ber_varfix_0,   'r--', label = 'Commpy Decoder feed wrong SNR 0 dB')

    #plt.legend(handles = [p10, p11, p20, p21, p22])
    plt.legend(handles = [p10, p11, p23, p24, p25, p26])
    plt.show()



def len1000_radar_noise():
    '''
    [testing] This SNR runnig time is 1210.01156211
[Result]SNR:  [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]
[Result]BER [0.068018999999999996, 0.010931, 0.00037100000000000002, 0.0001, 6.9999999999999999e-06, 3.9999999999999998e-06, 0.0, 0.0]
[Result]BLER [0.95799999999999996, 0.48999999999999999, 0.064999999999999947, 0.015000000000000013, 0.0030000000000000027, 0.0020000000000000018, 0.0, 0.0]
[Result]Total Running time: 10270.062916
    '''
    SNRS        = [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]
    ber_denoise = [0.068018999999999996, 0.010931, 0.00037100000000000002, 0.0001, 6.9999999999999999e-06, 3.9999999999999998e-06, 0.0, 0.0]
    ber_commpy  = [0.028234, 0.002122, 6.8e-05, 2.01e-05, 7.1e-06, 2.9e-06, 9e-07, 3e-07]
    ber_radar   = [0.28123399999999998, 0.27918199999999999, 0.27749699999999999, 0.27626099999999998, 0.27601900000000001, 0.27487899999999998, 0.27381, 0.29230800000000001]

    rnn_radar_no_trained = [0.222, 0.1971, 0.18629999999999999, 0.16270000000000001, 0.1358, 0.13039999999999999, 0.11700000000000001, 0.1074]
    rnn_radar_trained    = [0.12909999999999999, 0.0332, 0.0079000000000000008, 0.00040000000000000002, 0.0, 0.00020000000000000001, 0.0, 0.0]

    plt.figure(1)
    plt.title('Block len = 1000 BER on variable length and iterations\n Comparing to Commpy Result')

    p10,  = plt.plot(SNRS, ber_denoise, 'y', label = 'Turbo Denoised Decoding')
    p11, = plt.plot(SNRS, ber_commpy, 'g',  label = 'Turbo AWGN Noise')
    p12, = plt.plot(SNRS, ber_radar, 'r', label = 'Turbo Radar Noise')
    p13, = plt.plot(SNRS, rnn_radar_no_trained, 'c-*', label = 'RNN not aware of Radar Noise')
    plt.legend(handles = [p10, p11,p12,   p13])

    plt.figure(2)
    plt.title('Block len = 1000 BER on variable length and iterations\n Comparing to Commpy Result')
    plt.yscale('log')

    p10,  = plt.plot(SNRS, ber_denoise, 'y', label = 'Turbo Denoised Decoding')
    p11, = plt.plot(SNRS, ber_commpy, 'g',  label = 'Turbo AWGN Noise')
    p12, = plt.plot(SNRS, ber_radar, 'r', label = 'Turbo Radar Noise')

    p20, = plt.plot(SNRS, rnn_radar_trained, 'c--', label = 'LSTM 6 iter')
    # p21, = plt.plot(SNRS, rnn_ber_bl1000_iter8, 'k--', label = 'LSTM 8 iter')
    # p22, = plt.plot(SNRS, rnn_ber_bl1000_iter4, 'b--', label = 'LSTM 4 iter')

    plt.legend(handles = [p10, p11,p12,   p20])
    plt.show()


def len1000_new():
    SNRS =[-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]

    commpy_ber_bl1000_iter2 = [0.067479999999999998, 0.028367, 0.0075680000000000001, 0.001178, 0.000146, 2.4000000000000001e-05, 6.0000000000000002e-06, 3.9999999999999998e-06]
    commpy_ber_bl1000_iter4 = [0.038989200000000002, 0.0055069999999999997, 0.000281, 2.8799999999999999e-05, 9.3999999999999998e-06, 4.1999999999999996e-06, 7.9999999999999996e-07, 7.9999999999999996e-07]
    commpy_ber_bl1000_iter6 = [0.028234, 0.002122, 6.8e-05, 2.01e-05, 7.1e-06, 2.9e-06, 9e-07, 3e-07]
    commpy_ber_bl1000_iter8 = [0.024292, 0.001354, 4.8e-05, 1.73e-05, 6.9e-06, 2.9e-06, 9e-07, 3e-07]
    commpy_ber_bl1000_iter10= [0.023285, 0.0013489999999999999, 4.8000000000000001e-05, 1.4e-05, 7.9999999999999996e-06, 7.9999999999999996e-06, 3.9999999999999998e-07, 3.9999999999999998e-07]
    commpy_ber_bl1000_iter12= [0.021884, 0.000968, 5e-05, 1.58e-05, 6.1e-06, 2.8e-06, 1e-06, 3e-07]
    commpy_ber_bl1000_iter14=  []
    commpy_ber_bl1000_iter16=  []

    rnn_ber_bl1000_iter2    = []
    rnn_ber_bl1000_iter4    = [0.050664000000000001, 0.0091750000000000009, 0.00050000000000000001, 4.8999999999999998e-05,1.1399999999999999e-05, 2.7499999999999999e-06, 1.3e-06, 3.9999999999999998e-07]
    rnn_ber_bl1000_iter6    = [0.038248999999999998, 0.00365, 0.000116, 2.49e-05, 8.74e-06, 3.48e-06, 1.46e-06, 3.4e-07]
    rnn_ber_bl1000_iter8    = [0.034845000000000001, 0.0023700000000000001, 9.2499999999999999e-05,2.3799999999999999e-05, 7.9999999999999996e-06, 4.0999999999999997e-06, 1.44e-06, 3e-07]
    rnn_ber_bl1000_iter10   = []
    rnn_ber_bl1000_iter12   = []
    rnn_ber_bl1000_iter14   = []
    rnn_ber_bl1000_iter16   = []


    old_snrs = [-1.00000012, -0.71346486 ,-0.41715208 ,-0.11037455 , 0.20763701 , 0.53773534, 0.88087624 , 1.2381326,   1.61071563,  2.00000024]
    BER_len1000_iter2 = [0.0389672, 0.022663599999999999, 0.011271700000000001, 0.0047228000000000001, 0.0016792000000000001, 0.00049649999999999998, 0.00012659999999999999, 2.9799999999999999e-05, 7.0999999999999998e-06, 1.3e-06]
    BER_len1000_iter4 =  [0.0091012000000000003, 0.0021686000000000001, 0.00038430000000000002, 7.9400000000000006e-05, 2.8600000000000001e-05, 1.1e-05, 3.9999999999999998e-06, 2.2000000000000001e-06, 1.5e-06, 5.9999999999999997e-07]
    BER_len1000_iter6 =  [0.0039564999999999999, 0.000553, 9.7999999999999997e-05, 3.1000000000000001e-05, 1.7499999999999998e-05, 3.9999999999999998e-06, 4.5000000000000001e-06, 1.9999999999999999e-06, 9.9999999999999995e-07, 9.9999999999999995e-07]
    BER_len1000_iter10 = [0.0021800000000000001, 0.00024250000000000001, 6.0000000000000002e-05, 1.6500000000000001e-05, 1.0499999999999999e-05, 3.9999999999999998e-06, 7.5000000000000002e-06, 3.9999999999999998e-06, 9.9999999999999995e-07, 0.0]
    BER_len1000_iter12 = [0.0018940000000000001, 0.000174, 7.4499999999999995e-05, 2.5999999999999998e-05, 9.0000000000000002e-06, 9.0000000000000002e-06, 3.9999999999999998e-06, 5.0000000000000004e-06, 1.9999999999999999e-06, 9.9999999999999995e-07]
    BER_len1000_iter16  = [0.0014564999999999999, 0.00013650000000000001, 5.2500000000000002e-05, 1.0000000000000001e-05, 1.6500000000000001e-05, 3.9999999999999998e-06, 9.9999999999999995e-07, 0.0, 9.9999999999999995e-07, 0.0]

    plt.figure(1)
    plt.title('Block len = 1000 BER on variable length and iterations\n Comparing to Commpy Result')
    plt.yscale('log')

    p10,  = plt.plot(SNRS, commpy_ber_bl1000_iter6, 'y', label = 'Commpy 6 iteration')
    p11, = plt.plot(SNRS, commpy_ber_bl1000_iter8, 'g',  label = 'Commpy 8 iteration')
    p12, = plt.plot(SNRS, commpy_ber_bl1000_iter4, 'r', label = 'Commpy 4 iteration')
    p13, = plt.plot(SNRS, commpy_ber_bl1000_iter2, 'c', label = 'Commpy 2 iteration')

    p20, = plt.plot(SNRS, rnn_ber_bl1000_iter6, 'c--', label = 'LSTM 6 iter')
    p21, = plt.plot(SNRS, rnn_ber_bl1000_iter8, 'k--', label = 'LSTM 8 iter')
    p22, = plt.plot(SNRS, rnn_ber_bl1000_iter4, 'b--', label = 'LSTM 4 iter')

    plt.legend(handles = [p10, p11,p12,p13,   p20, p21, p22])
    plt.show()


def len100_new():
    SNRS =[-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]
    commpy_ber_bl100_iter6 =[0.05856, 0.02735, 0.00997, 0.003071, 0.000749, 0.0001968, 6.37e-05, 2.85e-05]
    commpy_ber_bl100_iter8 =[0.05697, 0.02582, 0.00979, 0.002966, 0.000719, 0.0001848, 6.45e-05, 2.82e-05]
    commpy_ber_bl100_iter12=[0.05569, 0.02534, 0.00934, 0.002762, 0.000615, 0.000178, 6.07e-05, 2.66e-05]

    rnn_ber_bl100_iter4    = [0.066627000000000006, 0.034339000000000001, 0.012880000000000001, 0.003875, 0.00099599999999999992, 0.000242, 7.2999999999999999e-05, 5.1999999999999997e-05]
    rnn_ber_bl100_iter6    = [0.064903000000000002, 0.031508000000000001, 0.011722, 0.0031189999999999998, 0.00069999999999999999, 0.000183, 0.000101, 3.4999999999999997e-05]
    rnn_ber_bl100_iter8    =[0.064381999999999995, 0.029773000000000001, 0.010817, 0.0032659999999999998, 0.00087699999999999996, 0.00021900000000000001, 7.8999999999999996e-05, 3.4e-05]
    rnn_ber_bl100_iter10   =[0.064309000000000005, 0.029409000000000001, 0.010976, 0.0028440000000000002, 0.00079500000000000003, 0.00022599999999999999, 8.6000000000000003e-05, 3.6999999999999998e-05]
    rnn_ber_bl100_iter12   =[0.064057000000000003, 0.029523000000000001, 0.011008, 0.0031519999999999999, 0.00080999999999999996, 0.00024600000000000002, 7.1000000000000005e-05, 2.5000000000000001e-05]
    rnn_ber_bl100_iter16   =[0.062092000000000001, 0.030089000000000001, 0.010158, 0.0031150000000000001, 0.00064700000000000001, 0.000213, 8.3999999999999995e-05, 4.3000000000000002e-05]

    rnn_bler_bl100_iter6    = [0.58479999999999999, 0.36220000000000002, 0.17319999999999999, 0.064799999999999996, 0.021700000000000001, 0.0083000000000000001, 0.0047000000000000002, 0.0019]
    commpy_bler_bl100_iter6 = [0.52479999999999993, 0.29549999999999998, 0.13429999999999997, 0.054699999999999971, 0.019499999999999962, 0.0071999999999999842, 0.0032999999999999696, 0.0018000000000000238]



    plt.figure(1)
    plt.title('Block len = 100 BER')
    plt.yscale('log')

    p10,  = plt.plot(SNRS, commpy_ber_bl100_iter6, 'y', label = 'Commpy 6 iteration')
    #p11, = plt.plot(SNRS, commpy_ber_bl100_iter8, 'g',  label = 'Commpy 8 iteration')
    #p12, = plt.plot(SNRS, commpy_ber_bl100_iter12, 'r', label = 'Commpy 12 iteration')

    p20, = plt.plot(SNRS, rnn_ber_bl100_iter6, 'c--', label = 'LSTM 6 iter')
    #p21, = plt.plot(SNRS, rnn_ber_bl100_iter8, 'k--', label = 'LSTM 8 iter')
    #p22, = plt.plot(SNRS, rnn_ber_bl100_iter12, 'b--', label = 'LSTM 12 iter')

    plt.legend(handles = [p10, p20])
    #plt.legend(handles = [p10, p11, p12, p20, p21, p22])


    plt.figure(2)
    plt.title('Block Length 100 BLER')

    p1, =  plt.plot(SNRS, rnn_bler_bl100_iter6, label = 'LSTM 6 iter')
    p2, =  plt.plot(SNRS, commpy_bler_bl100_iter6, label = 'Commpy 6 iteration')
    plt.legend(handles = [p1, p2])

    plt.show()


'''
[Result]SNR:  [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]
[Result]BER [0.056631000000000001, 0.026016999999999998, 0.0097260000000000003, 0.0030709999999999999, 0.00074899999999999999, 0.00018000000000000001, 6.7999999999999999e-05, 3.4e-05]
[Result]BLER [0.52479999999999993, 0.29549999999999998, 0.13429999999999997, 0.054699999999999971, 0.019499999999999962, 0.0071999999999999842, 0.0032999999999999696, 0.0018000000000000238]
[Result]Total Running time: 1443.1960659

[Result Summary] SNRS is [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0]
[Result Summary] Turbo RNN BER is [0.066627000000000006, 0.034339000000000001, 0.012880000000000001, 0.003875, 0.00099599999999999992, 0.000242, 7.2999999999999999e-05, 5.1999999999999997e-05]
[Result Summary] Turbo RNN BLER is [0.63690000000000002, 0.41720000000000002, 0.20830000000000001, 0.077100000000000002, 0.028400000000000002, 0.0092999999999999992, 0.0038, 0.0030000000000000001]
yihan@ksreeram:~/cse548/infoTF/turbo_LSTM_decoder$ python evaluate_rnn.py -num_block 10000 -block_len 100 -num_dec_iteration 4

[Result Summary] Turbo RNN BER is [0.064903000000000002, 0.031508000000000001, 0.011722, 0.0031189999999999998, 0.00069999999999999999, 0.000183, 0.000101, 3.4999999999999997e-05]
[Result Summary] Turbo RNN BLER is [0.58479999999999999, 0.36220000000000002, 0.17319999999999999, 0.064799999999999996, 0.021700000000000001, 0.0083000000000000001, 0.0047000000000000002, 0.0019]
yihan@ksreeram:~/cse548/infoTF/turbo_LSTM_decoder$ python evaluate_rnn.py -num_block 10000 -block_len 100 -num_dec_iteration 6

[Result Summary] Turbo RNN BER is [0.064381999999999995, 0.029773000000000001, 0.010817, 0.0032659999999999998, 0.00087699999999999996, 0.00021900000000000001, 7.8999999999999996e-05, 3.4e-05]
[Result Summary] Turbo RNN BLER is [0.57999999999999996, 0.33350000000000002, 0.16, 0.064100000000000004, 0.0247, 0.0091999999999999998, 0.0038999999999999998, 0.0018]
yihan@ksreeram:~/cse548/infoTF/turbo_LSTM_decoder$ python evaluate_rnn.py -num_block 10000 -block_len 100 -num_dec_iteration 8^C


[Result Summary] Turbo RNN BER is [0.064309000000000005, 0.029409000000000001, 0.010976, 0.0028440000000000002, 0.00079500000000000003, 0.00022599999999999999, 8.6000000000000003e-05, 3.6999999999999998e-05]
[Result Summary] Turbo RNN BLER is [0.57250000000000001, 0.33179999999999998, 0.1575, 0.062, 0.020199999999999999, 0.0094000000000000004, 0.0043, 0.0018]
yihan@ksreeram:~/cse548/infoTF/turbo_LSTM_decoder$ python evaluate_rnn.py -num_block 10000 -block_len 100 -num_dec_iteration 10

[Result Summary] Turbo RNN BER is [0.064057000000000003, 0.029523000000000001, 0.011008, 0.0031519999999999999, 0.00080999999999999996, 0.00024600000000000002, 7.1000000000000005e-05, 2.5000000000000001e-05]
[Result Summary] Turbo RNN BLER is [0.56930000000000003, 0.3261, 0.156, 0.060699999999999997, 0.022800000000000001, 0.0086, 0.0038, 0.0015]
yihan@ksreeram:~/cse548/infoTF/turbo_LSTM_decoder$ python evaluate_rnn.py -num_block 10000 -block_len 100 -num_dec_iteration 12
[Result Summary] Turbo RNN BER is [0.062092000000000001, 0.030089000000000001, 0.010158, 0.0031150000000000001, 0.00064700000000000001, 0.000213, 8.3999999999999995e-05, 4.3000000000000002e-05]
[Result Summary] Turbo RNN BLER is [0.55230000000000001, 0.32779999999999998, 0.14899999999999999, 0.061699999999999998, 0.020799999999999999, 0.0088999999999999999, 0.0044000000000000003, 0.002]
yihan@ksreeram:~/cse548/infoTF/turbo_LSTM_decoder$ python evaluate_rnn.py -num_block 10000 -block_len 100 -num_dec_iteration 16
'''


def train_adapitivity():
    SNRS = [-1.00000012, -0.71346486 ,-0.41715208 ,-0.11037455 , 0.20763701 , 0.53773534, 0.88087624 , 1.2381326,   1.61071563,  2.00000024]

    ber_start =  [0.0039564999999999999, 0.000553, 9.7999999999999997e-05, 3.1000000000000001e-05, 1.7499999999999998e-05, 3.9999999999999998e-06, 4.5000000000000001e-06, 1.9999999999999999e-06, 9.9999999999999995e-07, 9.9999999999999995e-07]

    ber_train_neg1db = [0.0025799999999999998, 0.00040999999999999999, 1.0000000000000001e-05, 0.0, 2.0000000000000002e-05, 0.0, 2.0000000000000002e-05, 2.0000000000000002e-05, 0.0, 0.0]
    #ber_train_neg1db = [0.0038700000000000002, 0.00044999999999999999, 0.00010399999999999999, 3.4e-05, 1.5999999999999999e-05, 7.9999999999999996e-06, 3.9999999999999998e-06, 0.0, 0.0, 0.0]
    ber_train_neg1db = [0.003339, 0.00057899999999999998, 8.3999999999999995e-05, 2.5000000000000001e-05, 1.7e-05, 1.2e-05, 3.9999999999999998e-06, 1.9999999999999999e-06, 0.0, 0.0]
    ber_train2db = [0.00313, 0.00048999999999999998, 0.00019699999999999999, 3.8000000000000002e-05, 1.2e-05, 3.9999999999999998e-06, 1.9999999999999999e-06, 3.9999999999999998e-06, 3.9999999999999998e-06, 0.0]
    ber_train1db = [0.0037599999999999999, 0.00052599999999999999, 0.00011400000000000001, 3.0000000000000001e-05, 1.8499999999999999e-05, 3.9999999999999998e-06, 7.5000000000000002e-06, 9.9999999999999995e-07, 0.0, 9.9999999999999995e-07]

    ber_train0db = [0.003692, 0.00063000000000000003, 8.5000000000000006e-05, 3.3000000000000003e-05, 1.5999999999999999e-05, 5.0000000000000004e-06, 3.9999999999999998e-06, 3.9999999999999998e-06, 0.0, 0.0]
    bler_train0db= [0.28999999999999998, 0.10199999999999999, 0.029000000000000001, 0.012999999999999999, 0.0080000000000000002, 0.001, 0.002, 0.002, 0.0, 0.0]

    commpy_new_1000_ber = [  2.11690000e-03  , 3.31300000e-04 ,  7.24000000e-05 ,  2.80000000e-05,
                   1.31000000e-05 ,  6.50000000e-06 ,  3.40000000e-06,   1.60000000e-06,
                   8.00000000e-07 ,  6.00000000e-07]
    commpy_new_1000_bler = [ 0.1786 , 0.0545,  0.0206,  0.01  ,  0.0059,  0.0032,  0.0017,  0.0008,  0.0004,
                    0.0003]

    plt.figure(1)
    plt.title('Block len = 1000 BER on variable length and iterations\n Comparing to Matlab dec')
    plt.yscale('log')

    p0,  = plt.plot(SNRS, ber_train_neg1db, 'y', label = 'trained at -1 dB')
    p11, = plt.plot(SNRS, ber_start, 'g-*', label = 'LSTM 6 iter original')
    p12, = plt.plot(SNRS, ber_train0db, 'r-*', label = 'LSTM 6 iter train at 0dB')
    p13, = plt.plot(SNRS, ber_train1db, 'g-*', label = 'LSTM 6 iter train at 1dB')
    p14, = plt.plot(SNRS, ber_train2db, 'b-*', label = 'LSTM 6 iter train at 2dB')

    p9, = plt.plot(SNRS, commpy_new_1000_ber, 'c', label= 'Adjusted Commpy 6 iteration')

    plt.legend(handles = [p0, p11,p12,p13, p14,  p9])
    plt.show()




def len100_variable_iter():

    SNRS = [-1.00000012, -0.71346486 ,-0.41715208 ,-0.11037455 , 0.20763701 , 0.53773534, 0.88087624 , 1.2381326,   1.61071563,  2.00000024]

    BER_bl100_iter10  = [0.030929999999999999, 0.017330000000000002, 0.0090779999999999993, 0.0041120000000000002, 0.0018420000000000001, 0.00066, 0.00029599999999999998, 0.00016000000000000001, 6.6000000000000005e-05, 4.1999999999999998e-05]
    BLER_bl100_iter10 = [0.34039999999999998, 0.22339999999999999, 0.13239999999999999, 0.076600000000000001, 0.043999999999999997, 0.021399999999999999, 0.0104, 0.0066, 0.0035999999999999999, 0.0023999999999999998]

    BER_bl100_iter12  = [0.030325999999999999, 0.017884000000000001, 0.0082159999999999993, 0.004836, 0.001784, 0.00063000000000000003, 0.00023000000000000001, 0.0001, 6.7999999999999999e-05, 4.1999999999999998e-05]
    BLER_bl100_iter12 = [0.33660000000000001, 0.219, 0.12939999999999999, 0.082199999999999995, 0.042999999999999997, 0.02, 0.0094000000000000004, 0.0047999999999999996, 0.0040000000000000001, 0.0022000000000000001]

    BER_bl100_iter6   =  [0.03116, 0.018407799999999998, 0.0094058000000000006, 0.0044178000000000004, 0.0018896, 0.00076159999999999997, 0.00028820000000000001, 0.000118, 6.0600000000000003e-05, 3.1600000000000002e-05]
    BLER_bl100_iter6  =[0.35980000000000001, 0.24407999999999999, 0.14815999999999999, 0.083299999999999999, 0.044299999999999999, 0.023140000000000001, 0.010880000000000001, 0.0055999999999999999, 0.0030200000000000001, 0.00166]

    BER_bl100_iter16  =  [0.029704000000000001, 0.017762, 0.0085380000000000005, 0.0040359999999999997, 0.001712, 0.00046000000000000001, 0.00026400000000000002, 0.00012400000000000001, 6.9999999999999994e-05, 4.0000000000000003e-05]
    BLER_bl100_iter16 =  [0.34100000000000003, 0.22339999999999999, 0.13539999999999999, 0.074399999999999994, 0.039600000000000003, 0.016400000000000001, 0.01, 0.0061999999999999998, 0.0032000000000000002, 0.0018]

    # I am using t_tb8_bler/ber in 100
    MATLAB_SNRS = [-1.0000 ,  -0.6667 ,  -0.3333   ,      0   , 0.3333 ,   0.6667  ,  1.0000  ,  1.3333 ,   1.6667 ,   2.0000]
    MATLAB_BER_len100_iter6  = [0.0485  ,  0.0291  ,  0.0169 ,   0.0080 ,   0.0040 ,   0.0018  ,  0.0009 ,   0.0004  ,  0.0002 ,   0.0001]
    MATLAB_BER_len100_iter10 = [0.0463, 0.0275, 0.0158,0.0071, 0.0036, 0.0016,    0.0008 ,   0.0003 ,   0.0002  ,  0.0001]
    MATLAB_BER_len100_iter12 = [0.0462  ,  0.0271  ,  0.0157  ,  0.0071 ,   0.0036   , 0.0015 ,   0.0007,    0.0003  ,  0.0002  ,  0.0001]
    MATLAB_BER_len100_iter16 = [0.0455  ,  0.0267  ,  0.0152 ,   0.0068   , 0.0034  ,  0.0015 ,   0.0007 ,   0.0003 ,   0.0002   , 0.0001]

    MATLAB_BLER_len100_iter6  = [0.4722  ,  0.3297 ,   0.2227 ,   0.1303  ,  0.0799 ,   0.0430  ,  0.0282  ,  0.0158 ,   0.0116  ,  0.0067]
    MATLAB_BLER_len100_iter10 = [0.4482 ,   0.3087  ,  0.2048  ,  0.1169   , 0.0748  ,  0.0400  ,  0.0256   , 0.0151   , 0.0112   , 0.0059]
    MATLAB_BLER_len100_iter12 = [0.4439   , 0.3028  ,  0.2011 ,   0.1138  ,  0.0725 ,   0.0392  ,  0.0256 ,   0.0150 ,   0.0111  ,  0.0060]
    MATLAB_BLER_len100_iter16 = [0.4375  ,  0.2990  ,  0.1971,    0.1113  ,  0.0716 ,   0.0383  ,  0.0247  ,  0.0146  ,  0.0111  ,  0.0056]

    MATLAB_dec_BER_len100_iter6  = [0.0226 ,   0.0107  ,  0.0053  ,  0.0018 ,   0.0010 ,   0.0003  ,  0.0001 ,   0.0001  ,  0.0000 ,   0.0000]
    MATLAB_dec_BER_len100_iter10 = [0.0199  ,  0.0103  ,  0.0044  ,  0.0017  ,  0.0005  ,  0.0002 ,   0.0001  ,  0.0000   , 0.0000 ,   0.0000]
    MATLAB_dec_BER_len100_iter12 = [0.0200 ,   0.0099   , 0.0047 ,   0.0018  ,  0.0006  ,  0.0002 ,   0.0001  ,  0.0000  ,  0.0000 ,   0.0000]
    MATLAB_dec_BER_len100_iter16 = [0.0207  ,  0.0099 ,   0.0041,    0.0015  ,  0.0004  ,  0.0002  ,  0.0001  ,  0.0000 ,   0.0000  ,  0.0000]

    plt.figure(1)
    plt.title('Block len = 100 BER on variable length and iterations')
    plt.yscale('log')
    p1, = plt.plot(SNRS, BER_bl100_iter6, 'r', label = 'LSTM Iter NUm 6')
    p2, = plt.plot(SNRS, BER_bl100_iter10, 'g', label = 'LSTM Iter NUm 10')
    p3, = plt.plot(SNRS, BER_bl100_iter12, 'b', label = 'LSTM Iter NUm 12')
    p4, = plt.plot(SNRS, BER_bl100_iter16, 'k', label = 'LSTM Iter NUm 16')

    p5, = plt.plot(MATLAB_SNRS, MATLAB_dec_BER_len100_iter6, 'r-*',  label = 'Hyeji MATLAB Iter NUm 6')
    p6, = plt.plot(MATLAB_SNRS, MATLAB_dec_BER_len100_iter10, 'g-*',label = 'Hyeji MATLAB Iter NUm 10')
    p7, = plt.plot(MATLAB_SNRS, MATLAB_dec_BER_len100_iter12, 'b-*',label = 'Hyeji MATLAB Iter NUm 12')
    p8, = plt.plot(MATLAB_SNRS, MATLAB_dec_BER_len100_iter16, 'k-*',label = 'Hyeji MATLAB Iter NUm 16')

    plt.legend(handles = [p1, p2, p3, p4, p5, p6, p7, p8])
    #plt.plot(SNRS, BER_len1000_iter6, 'b')


    plt.figure(2)
    plt.title('Block len = 100 BER on variable length and iterations ont_tb8')
    plt.yscale('log')
    p1, = plt.plot(SNRS, BER_bl100_iter6, 'r', label = 'LSTM Iter NUm 6')
    p2, = plt.plot(SNRS, BER_bl100_iter10, 'g', label = 'LSTM Iter NUm 10')
    p3, = plt.plot(SNRS, BER_bl100_iter12, 'b', label = 'LSTM Iter NUm 12')
    p4, = plt.plot(SNRS, BER_bl100_iter16, 'k', label = 'LSTM Iter NUm 16')

    p5, = plt.plot(MATLAB_SNRS, MATLAB_BER_len100_iter6, 'r-*',  label = 'Hyeji MATLAB Iter NUm 6')
    p6, = plt.plot(MATLAB_SNRS, MATLAB_BER_len100_iter10, 'g-*',label = 'Hyeji MATLAB Iter NUm 10')
    p7, = plt.plot(MATLAB_SNRS, MATLAB_BER_len100_iter12, 'b-*',label = 'Hyeji MATLAB Iter NUm 12')
    p8, = plt.plot(MATLAB_SNRS, MATLAB_BER_len100_iter16, 'k-*',label = 'Hyeji MATLAB Iter NUm 16')

    plt.legend(handles = [p1, p2, p3, p4, p5, p6, p7, p8])

    plt.figure(3)
    plt.title('Block len = 100 BLER on variable length and iterations ont_tb8')
    plt.yscale('log')
    p1, = plt.plot(SNRS, BLER_bl100_iter6, 'r', label = 'LSTM Iter NUm 6')
    p2, = plt.plot(SNRS, BLER_bl100_iter10, 'g', label = 'LSTM Iter NUm 10')
    p3, = plt.plot(SNRS, BLER_bl100_iter12, 'b', label = 'LSTM Iter NUm 12')
    p4, = plt.plot(SNRS, BLER_bl100_iter16, 'k', label = 'LSTM Iter NUm 16')

    p5, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len100_iter6, 'r-*',  label = 'Hyeji MATLAB Iter NUm 6')
    p6, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len100_iter10, 'g-*',label = 'Hyeji MATLAB Iter NUm 10')
    p7, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len100_iter12, 'b-*',label = 'Hyeji MATLAB Iter NUm 12')
    p8, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len100_iter16, 'k-*',label = 'Hyeji MATLAB Iter NUm 16')

    plt.legend(handles = [p1, p2, p3, p4, p5, p6, p7, p8])
    plt.show()



def len1000_variable_iter():
    SNRS = [-1.00000012, -0.71346486 ,-0.41715208 ,-0.11037455 , 0.20763701 , 0.53773534, 0.88087624 , 1.2381326,   1.61071563,  2.00000024]

    BER_len1000_iter2 = [0.0389672, 0.022663599999999999, 0.011271700000000001, 0.0047228000000000001, 0.0016792000000000001, 0.00049649999999999998, 0.00012659999999999999, 2.9799999999999999e-05, 7.0999999999999998e-06, 1.3e-06]
    BER_len1000_iter4 =  [0.0091012000000000003, 0.0021686000000000001, 0.00038430000000000002, 7.9400000000000006e-05, 2.8600000000000001e-05, 1.1e-05, 3.9999999999999998e-06, 2.2000000000000001e-06, 1.5e-06, 5.9999999999999997e-07]
    BER_len1000_iter6_1 =  [0.0039564999999999999, 0.000553, 9.7999999999999997e-05, 3.1000000000000001e-05, 1.7499999999999998e-05, 3.9999999999999998e-06, 4.5000000000000001e-06, 1.9999999999999999e-06, 9.9999999999999995e-07, 9.9999999999999995e-07]
    BER_len1000_iter10 = [0.0021800000000000001, 0.00024250000000000001, 6.0000000000000002e-05, 1.6500000000000001e-05, 1.0499999999999999e-05, 3.9999999999999998e-06, 7.5000000000000002e-06, 3.9999999999999998e-06, 9.9999999999999995e-07, 0.0]
    BER_len1000_iter12 = [0.0018940000000000001, 0.000174, 7.4499999999999995e-05, 2.5999999999999998e-05, 9.0000000000000002e-06, 9.0000000000000002e-06, 3.9999999999999998e-06, 5.0000000000000004e-06, 1.9999999999999999e-06, 9.9999999999999995e-07]
    BER_len1000_iter16  = [0.0014564999999999999, 0.00013650000000000001, 5.2500000000000002e-05, 1.0000000000000001e-05, 1.6500000000000001e-05, 3.9999999999999998e-06, 9.9999999999999995e-07, 0.0, 9.9999999999999995e-07, 0.0]

    BER_len1000_iter6_2 =  [0.0037834000000000001, 0.00053379999999999996, 9.4900000000000003e-05, 3.04e-05, 1.6399999999999999e-05, 8.6999999999999997e-06, 2.5000000000000002e-06, 2.0999999999999998e-06, 1.5999999999999999e-06, 1.9999999999999999e-07]

    Commpy_len1000_iter12 = [  1.08500000e-03  , 1.31500000e-04  , 3.90000000e-05 ,  2.20000000e-05,
           1.05000000e-05,   7.00000000e-06 ,  6.00000000e-06 ,  3.00000000e-06,
           2.00000000e-06  , 2.00000000e-06]
    Commpy_len1000_iter16 = [  9.84500000e-04,   1.24000000e-04  , 3.40000000e-05  , 2.10000000e-05,
           1.05000000e-05  , 7.00000000e-06 ,  6.00000000e-06 ,  3.00000000e-06,
           2.00000000e-06  , 2.00000000e-06]

    BLER_len1000_iter6  = [0.3125, 0.10299999999999999, 0.031, 0.012999999999999999, 0.0085000000000000006, 0.002, 0.002, 0.001, 0.00050000000000000001, 0.00050000000000000001]
    BLER_len1000_iter10 = [0.14999999999999999, 0.051999999999999998, 0.021499999999999998, 0.0074999999999999997, 0.0044999999999999997, 0.002, 0.0035000000000000001, 0.0015, 0.00050000000000000001, 0.0]
    BLER_len1000_iter12 = [0.127, 0.036499999999999998, 0.021999999999999999, 0.0115, 0.0044999999999999997, 0.0044999999999999997, 0.002, 0.0025000000000000001, 0.001, 0.00050000000000000001]
    BLER_len1000_iter16 = [0.1095, 0.028500000000000001, 0.018499999999999999, 0.0044999999999999997, 0.0080000000000000002, 0.002, 0.00050000000000000001, 0.0, 0.00050000000000000001, 0.0]




    # I am using t_tb8_bler/ber in 1000
    MATLAB_SNRS = [-1.5000 ,  -1.0000 ,  -0.5000  ,       0   , 0.5000 ,   1.0000 ,   1.5000  ,  2.0000 ,   2.5000  ,  3.0000]
    MATLAB_dec_BER_len1000_iter6  = [0.029548000000000 ,  0.002048000000000 ,  0.000109000000000,   0.000019000000000  , 0.000010000000000,   0.000004000000000    ,     0     ,    0   ,      0    ,     0]
    MATLAB_dec_BER_len1000_iter10 = [ 0.020300000000000  , 0.000938000000000  , 0.000025000000000,   0.000008000000000  , 0.000004000000000 ,  0.000002000000000 ,  0.000004000000000 ,       0  ,       0     ,    0]
    MATLAB_dec_BER_len1000_iter12 = [ 0.021298000000000  , 0.000655000000000  , 0.000041000000000  , 0.000006000000000  , 0.000006000000000 ,  0.000002000000000 ,  0.000002000000000     ,0    ,     0  ,       0]
    MATLAB_dec_BER_len1000_iter16 = [ 0.018228000000000 ,  0.001021000000000  , 0.000032000000000 ,  0.000014000000000 ,  0.000006000000000  , 0.000002000000000 ,  0.000002000000000  , 0     ,    0   ,      0]

    MATLAB_BER_len1000_iter6  = [ 0.0759  ,  0.0183  ,  0.0018  ,  0.0001 ,   0.0000   , 0.0000  ,       0  ,  0.0000  ,       0  ,       0]
    MATLAB_BER_len1000_iter10 = [0.0722  ,  0.0142 ,   0.0008 ,   0.0001  ,  0.0000  ,  0.0000   ,      0   , 0.0000   ,      0   ,      0]
    MATLAB_BER_len1000_iter12 = [0.0712  ,  0.0133  ,  0.0007   , 0.0001   , 0.0000  ,  0.0000   ,      0   , 0.0000   ,      0  ,       0]
    MATLAB_BER_len1000_iter16 = [0.0704 ,   0.0123  ,  0.0006  ,  0.0001 ,   0.0000 ,   0.0000  ,       0   , 0.0000  ,       0   ,      0]

    MATLAB_BLER_len1000_iter6  = [0.9740  ,  0.6230 ,   0.1380 ,   0.0320 ,   0.0090,    0.0010    ,     0 ,   0.0010   ,      0  ,       0]
    MATLAB_BLER_len1000_iter10 = [0.9170  ,  0.4000  ,  0.0730  ,  0.0240  ,  0.0080 ,   0.0010     ,    0  ,  0.0010    ,     0   ,      0]
    MATLAB_BLER_len1000_iter12 = [0.8980  ,  0.3600   , 0.0590   , 0.0220   , 0.0090  ,  0.0010      ,   0   , 0.0010     ,    0    ,     0]
    MATLAB_BLER_len1000_iter16 = [0.8650  ,  0.3210    ,0.0500    ,0.0210    ,0.0080   , 0.0010       ,  0    ,0.0010      ,   0     ,    0]

    matlab_snr   = [0.5*item-1 for item in range(11)]
    matlab_turbo = [ 844.7680/100000  , 27.0820/100000   , 1.7600 /100000 ,  0.6760/100000  ,  0.2120/100000   , 0.1160/100000 ,   0.0520/100000 ,   0.0120/100000   ,      0   ,      0    ,     0]

    commpy_SNR=[-2. ,        -0.99351084, -0.39976263 ,  0.20033121 , 0.80010319 , 1.45576942,  2.00030828 , 3.    ,     3.99941325];
    adj1000 = [ 9.62600000e-02, 1.53000000e-03, 2.00000000e-05, 2.00000000e-05, 0.00000000e+00, 0.00000000e+00,  2.00000000e-05 , 0.00000000e+00 , 0.00000000e+00];
    commpy1000 = [  1.28140000e-01 ,  2.10000000e-02 ,  7.70000000e-04 ,  2.00000000e-05,   0.00000000e+00 , 0.00000000e+00 ,  2.00000000e-05 ,  0.00000000e+00,   0.00000000e+00];


    commpy_SNR = [-1.     ,    -0.71346414 ,-0.41715244, -0.11037421,  0.20763712,  0.53773555,
                    0.88087633,  1.23813262 , 1.61071576,  2.        ]
    commpy_old_1000_ber = [  1.87735000e-02  , 4.71230000e-03  , 8.89000000e-04 ,  1.64500000e-04,
                   3.99000000e-05  , 1.95000000e-05 ,  1.06000000e-05 ,  6.60000000e-06,
                   2.60000000e-06 ,  1.40000000e-06]
    commpy_old_1000_bler = [ 0.6193 , 0.2821 , 0.0957,  0.0324 , 0.0135 , 0.008,   0.0047,  0.0033 , 0.0013,
                        0.0007]

    commpy_new_1000_ber = [  2.11690000e-03  , 3.31300000e-04 ,  7.24000000e-05 ,  2.80000000e-05,
                   1.31000000e-05 ,  6.50000000e-06 ,  3.40000000e-06,   1.60000000e-06,
                   8.00000000e-07 ,  6.00000000e-07]
    commpy_new_1000_bler = [ 0.1786 , 0.0545,  0.0206,  0.01  ,  0.0059,  0.0032,  0.0017,  0.0008,  0.0004,
                    0.0003]


    something = [0.0048999999999999998, 0.00079000000000000001, 9.0000000000000006e-05, 0.0, 0.0, 0.0, 2.0000000000000002e-05, 0.0, 0.0, 0.0]

    something_gru = [0.0051700000000000001, 0.0016999999999999999, 0.00023000000000000001, 3.0000000000000001e-05, 3.0000000000000001e-05, 0.0, 2.0000000000000002e-05, 2.0000000000000002e-05, 0.0, 0.0]

    ber_len1000_train2dB = [0.0037360000000000002, 0.00060999999999999997, 9.6000000000000002e-05, 2.8e-05, 1.5e-05, 6.0000000000000002e-06, 6.0000000000000002e-06, 1.9999999999999999e-06, 0.0, 1.9999999999999999e-06]

    plt.figure(1)
    plt.title('Block len = 1000 BER on variable length and iterations\n Comparing to Matlab dec')
    plt.yscale('log')

    # p00,= plt.plot(SNRS, BER_len1000_iter2,'y--', label = 'LSTM Iter NUm 2' )
    # p0, = plt.plot(SNRS, BER_len1000_iter4, 'c--', label = 'LSTM Iter NUm 4')
    p11, = plt.plot(SNRS, BER_len1000_iter6_1, 'r-*', label = 'LSTM Iter NUm 6')
    p12, = plt.plot(SNRS, ber_len1000_train2dB, 'b', label = 'LSTM Iter NUm 6, train on 2dB')
    # p2, = plt.plot(SNRS, BER_len1000_iter10, 'g--', label = 'LSTM Iter NUm 10')
    # p3, = plt.plot(SNRS, BER_len1000_iter12, 'b--', label = 'LSTM Iter NUm 12')
    # p4, = plt.plot(SNRS, BER_len1000_iter16, 'k--', label = 'LSTM Iter NUm 16')

    #p7, = plt.plot(SNRS, Commpy_len1000_iter12, 'k', label = 'Adjusted Commpy 12 iteration')
    #p8, = plt.plot(SNRS, Commpy_len1000_iter16, 'b', label = 'Adjusted Commpy 16 iteration')
    p9, = plt.plot(commpy_SNR, commpy_new_1000_ber, 'c', label= 'Adjusted Commpy 6 iteration')

    plt.legend(handles = [p11,p12, p9])
    plt.show()

    # plt.figure(2)
    # plt.title('Block len = 1000 BER on variable length and iterations ont_tb8')
    # plt.yscale('log')
    # p1, = plt.plot(SNRS, BER_len1000_iter6, 'r', label = 'LSTM Iter NUm 6')
    # p2, = plt.plot(SNRS, BER_len1000_iter10, 'g', label = 'LSTM Iter NUm 10')
    # p3, = plt.plot(SNRS, BER_len1000_iter12, 'b', label = 'LSTM Iter NUm 12')
    # p4, = plt.plot(SNRS, BER_len1000_iter16, 'k', label = 'LSTM Iter NUm 16')
    #
    # p5, = plt.plot(MATLAB_SNRS, MATLAB_BER_len1000_iter6, 'r-*',  label = 'Hyeji MATLAB Iter NUm 6')
    # p6, = plt.plot(MATLAB_SNRS, MATLAB_BER_len1000_iter10, 'g-*',label = 'Hyeji MATLAB Iter NUm 10')
    # p7, = plt.plot(MATLAB_SNRS, MATLAB_BER_len1000_iter12, 'b-*',label = 'Hyeji MATLAB Iter NUm 12')
    # p8, = plt.plot(MATLAB_SNRS, MATLAB_BER_len1000_iter16, 'k-*',label = 'Hyeji MATLAB Iter NUm 16')
    # p0, = plt.plot(matlab_snr, matlab_turbo, 'c', label = 'MATLAB only result')
    #
    # plt.legend(handles = [p1, p2, p3, p4 ,p5, p6, p7, p8, p0])
    #
    # plt.figure(3)
    # plt.title('Block len = 1000 BLER on variable length and iterations ont_tb8')
    # plt.yscale('log')
    # p1, = plt.plot(SNRS, BLER_len1000_iter6, 'r', label = 'LSTM Iter NUm 6')
    # p2, = plt.plot(SNRS, BLER_len1000_iter10, 'g', label = 'LSTM Iter NUm 10')
    # p3, = plt.plot(SNRS, BLER_len1000_iter12, 'b', label = 'LSTM Iter NUm 12')
    # p4, = plt.plot(SNRS, BLER_len1000_iter16, 'k', label = 'LSTM Iter NUm 16')
    #
    # p5, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len1000_iter6, 'r-*',  label = 'Hyeji MATLAB Iter NUm 6')
    # p6, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len1000_iter10, 'g-*',label = 'Hyeji MATLAB Iter NUm 10')
    # p7, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len1000_iter12, 'b-*',label = 'Hyeji MATLAB Iter NUm 12')
    # p8, = plt.plot(MATLAB_SNRS, MATLAB_BLER_len1000_iter16, 'k-*',label = 'Hyeji MATLAB Iter NUm 16')
    #
    # plt.legend(handles = [p1, p2, p3,p4,  p5, p6, p7, p8])
    # plt.show()



def benchmark():

    SNRS = [-1.00000012, -0.71346486 ,-0.41715208 ,-0.11037455 , 0.20763701 , 0.53773534, 0.88087624 , 1.2381326,   1.61071563,  2.00000024]


    BER_len1000_iter6 =  [0.0039564999999999999, 0.000553, 9.7999999999999997e-05, 3.1000000000000001e-05, 1.7499999999999998e-05, 3.9999999999999998e-06, 4.5000000000000001e-06, 1.9999999999999999e-06, 9.9999999999999995e-07, 9.9999999999999995e-07]

    BER_len1000_iter6 = [0.0037834000000000001, 0.00053379999999999996, 9.4900000000000003e-05, 3.04e-05, 1.6399999999999999e-05, 8.6999999999999997e-06, 2.5000000000000002e-06, 2.0999999999999998e-06, 1.5999999999999999e-06, 1.9999999999999999e-07]
    commpy_new_1000_ber = [  2.11690000e-03  , 3.31300000e-04 ,  7.24000000e-05 ,  2.80000000e-05,
                   1.31000000e-05 ,  6.50000000e-06 ,  3.40000000e-06,   1.60000000e-06,
                   8.00000000e-07 ,  6.00000000e-07]


    #commpy_new_1000_ber = [  2.02350000e-03  , 2.30000000e-04 , 5.78000000e-05 ,  2.28000000e-05,   8.60000000e-06,   5.00000000e-06 ,  4.40000000e-06  , 1.80000000e-06,   1.00000000e-06 ,  2.00000000e-07]

    ber_no_sys_bit = [0.010410000000000001, 0.0017080000000000001, 0.00018599999999999999, 3.8000000000000002e-05, 4.0000000000000003e-05, 6.0000000000000002e-06, 1.9999999999999999e-06, 3.9999999999999998e-06, 0.0, 0.0]
    ber_sys_bit    = [0.0052300000000000003, 0.001054, 0.00012799999999999999, 6.2000000000000003e-05, 2.5999999999999998e-05, 3.9999999999999998e-06, 1.2e-05, 6.0000000000000002e-06, 0.0, 3.9999999999999998e-06]


    plt.figure(1)
    plt.title('Block len = 1000 BER on variable length and iterations\n Comparing to Matlab dec')
    plt.yscale('log')

    p9, = plt.plot(SNRS, commpy_new_1000_ber, 'c--', label= 'Adjusted Commpy')

    p1, = plt.plot(SNRS, BER_len1000_iter6, 'k', label = 'LSTM end-to-end trained')
    p2, = plt.plot(SNRS, BER_len1000_iter6, 'b', label = 'LSTM end-to-end trained with system bit')

    p99, = plt.plot(SNRS, ber_no_sys_bit, 'r', label = 'GRU no end2end no sys bit')
    p98, = plt.plot(SNRS, ber_sys_bit, 'g', label = 'GRU no end2end with sys bit')

    #p0, = plt.plot(matlab_snr, matlab_turbo, 'c', label = 'MATLAB only result')
    #plt.legend(handles = [p1, p2, p3,p4, p5, p6, p7, p8, p9, p0])
    plt.legend(handles = [ p1, p2, p9, p99, p98])
    plt.show()

if __name__ == '__main__':
    #len100_variable_iter()
    #len1000_variable_iter()
    #benchmark()
    #len100_new()
    #len1000_new()
    #len1000_radar_noise()
    #train_adapitivity()
    #benchmark_wrong_var_turbo()
    #len100_new()

    #len100_fixvar()

    #len1000_bench()

    #len100_fixvar()
    #len1000_bench()
    benchmark_wrong_var_turbo()